// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go

// Package usecase_test is a generated GoMock package.
package usecase_test

import (
	context "context"
	usecase "diary-api/internal/usecase"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// Mockstorage is a mock of storage interface.
type Mockstorage struct {
	ctrl     *gomock.Controller
	recorder *MockstorageMockRecorder
}

// MockstorageMockRecorder is the mock recorder for Mockstorage.
type MockstorageMockRecorder struct {
	mock *Mockstorage
}

// NewMockstorage creates a new mock instance.
func NewMockstorage(ctrl *gomock.Controller) *Mockstorage {
	mock := &Mockstorage{ctrl: ctrl}
	mock.recorder = &MockstorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockstorage) EXPECT() *MockstorageMockRecorder {
	return m.recorder
}

// CreateDiary mocks base method.
func (m *Mockstorage) CreateDiary(ctx context.Context, diary *usecase.Diary) (*usecase.Diary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDiary", ctx, diary)
	ret0, _ := ret[0].(*usecase.Diary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDiary indicates an expected call of CreateDiary.
func (mr *MockstorageMockRecorder) CreateDiary(ctx, diary interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDiary", reflect.TypeOf((*Mockstorage)(nil).CreateDiary), ctx, diary)
}

// GetDiariesByUser mocks base method.
func (m *Mockstorage) GetDiariesByUser(ctx context.Context, userID uuid.UUID) ([]usecase.Diary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDiariesByUser", ctx, userID)
	ret0, _ := ret[0].([]usecase.Diary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDiariesByUser indicates an expected call of GetDiariesByUser.
func (mr *MockstorageMockRecorder) GetDiariesByUser(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDiariesByUser", reflect.TypeOf((*Mockstorage)(nil).GetDiariesByUser), ctx, userID)
}
